defaults: &defaults
  docker:
    - image: circleci/node:16
  environment:
    ATSCM_PROJECT__HOST: '34.70.56.48'
    ATSCM_PROJECT__PORT__OPC: '4842'
    ATSCM_PROJECT__PORT__HTTP: '8080'

version: 2
jobs:
  install-deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Printing setup
          command: |
            node -v
            npm -v
      - run:
          name: Installing npm dependencies
          command: npm ci
      - save_cache:
          key: v1-npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint-commit-message:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Linting commit message
          command: git log --format=%B -n 1 $CIRCLE_SHA1 | npx commitlint

  lint-source:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Linting source files
          command: npm run lint -- --format junit --output-file ~/reports/eslint.xml
      - run:
          name: Checking code formatting
          command: npm run format -- --check
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  unit-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Creating report directory
          command: mkdir ~/reports
      - run:
          name: Running tests
          command: npm run test:unit -- --tap | npx tap-xunit > ~/reports/unit-tests.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Running atscm push
          command: npx atscm push
      - run:
          name: Create export files
          command: npm run export
      - store_artifacts:
          path: out

  start-testserver:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Login to google cloud
          command: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run:
          name: Starting atserver in google cloud
          command: gcloud compute instances start instance-1 --project=atscm-ci --zone=us-central1-f

  integration-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Creating report directory
          command: mkdir ~/reports
      - run:
          name: Running tests
          command: npm run test:integration -- --tap | npx tap-xunit > ~/reports/integration-tests.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys
      - run:
          name: Running atscm push
          command: SERVER_DIR=atscm npx atscm push
      - run:
          name: Create release files
          command: SERVER_DIR=atscm npm run export
      - run:
          name: Setting up git user
          command: git config --global user.email bump-version@ls-age.com && git config --global user.name "ls-age [bot]"
      - run:
          name: Signing into npm
          command: echo "$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Deploying changes
          command: npx bump-version release --gh-token $RELEASE_GITHUB_TOKEN
      - store_artifacts:
          path: out

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - install-deps
      - lint-commit-message:
          requires:
            - install-deps
      - lint-source:
          requires:
            - install-deps
      - unit-tests:
          requires:
            - install-deps
      - build:
          requires:
            - install-deps
      - start-testserver:
          context: atscm
      - integration-tests:
          requires:
            - build
            - start-testserver
      - deploy:
          requires:
            - lint-commit-message
            - lint-source
            - unit-tests
            - build
            - integration-tests
          filters:
            branches:
              only:
                - master
                - beta
